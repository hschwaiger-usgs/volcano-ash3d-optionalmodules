###############################################################################
#  Makefile for Ash3d
#
#    User-specified flags are in this top block
#
###############################################################################

#      This file is a component of the volcanic ash transport and dispersion model Ash3d,
#      written at the U.S. Geological Survey by Hans F. Schwaiger (hschwaiger@usgs.gov),
#      Larry G. Mastin (lgmastin@usgs.gov), and Roger P. Denlinger (roger@usgs.gov).

#      The model and its source code are products of the U.S. Federal Government and therefore
#      bear no copyright.  They may be copied, redistributed and freely incorporated 
#      into derivative products.  However as a matter of scientific courtesy we ask that
#      you credit the authors and cite published documentation of this model (below) when
#      publishing or distributing derivative products.

#      Schwaiger, H.F., Denlinger, R.P., and Mastin, L.G., 2012, Ash3d, a finite-
#         volume, conservative numerical model for ash transport and tephra deposition,
#         Journal of Geophysical Research, 117, B04204, doi:10.1029/2011JB008968. 

#      We make no guarantees, expressed or implied, as to the usefulness of the software
#      and its documentation for any purpose.  We assume no responsibility to provide
#      technical support to users of this software.

#      Sequence of commands:
#      "make -f makefile_optmod"  compiles the Ash3d_TC executable
#      "make -f makefile_optmod all" builds the executables and copies to bin
#      "make -f makefile_optmod install" copies the contents of volcano-ash3d/bin to the install location
#                        e.g. /opt/USGS/Ash3d
#
#  SYSTEM specifies which compiler to use
#    Current available options are:
#      gfortran , ifort , aocc
#    This variable cannot be left blank
#
SYSTEM = gfortran
SYSINC = make_gfortran.inc
#
#  RUN specifies which collection of compilation flags that should be run
#    Current available options are:
#      DEBUG : includes debugging info and issues warnings
#      PROF  : includes profiling flags with some optimization
#      OPT   : includes optimizations flags for fastest runtime
#      DEBUGOMP : includes debugging info and issues warnings and OpenMP directives
#      OMPOPT   : includes optimizations flags for fastest runtime and OpenMP directives
#                 To run, enter: env OMP_NUM_THREADS=4 Ash3d input_file.inp
#    This variable cannot be left blank
RUN = DEBUG
#RUN = DEBUGOMP
#RUN = PROF
RUN = OPT
#RUN = OMPOPT

#    This variable cannot be left blank
OS = LINUX
#OS = MACOS
#OS = WINDOWS

# This is the location of the USGS libraries and include files
# This might be different from the INSTALLDIR path if you want to link to special MetReader
# projection and HoursSince packages.
USGSROOT=/opt/USGS

# This is the location of the Ash3d core code source files that we will build this
# research branch with.
ASH3dCCSRC=~/work/USGS/Software/GIT/volcano-ash3d/src

INSTALLDIR=/opt/USGS/Ash3d

# DATA FORMATS
#  For each data format you want to include in the library, set the corresponding
#  variable below to 'T'.  Set to 'F' any you do not want compiled or any unavailable
USENETCDF = T
USEGRIB   = T

# MEMORY
# If you need pointer arrays instead of allocatable arrays, set this to 'T'
USEPOINTERS = F

# EXTERNAL DATA FILES
USEEXTDATA = T

# SPEED-UP ALGORITHMS
#  FAST_DT
#  FAST_SUBGRID
FASTFPPFLAG = 
#FASTFPPFLAG = -DFAST_DT
#FASTFPPFLAG = -DFAST_SUBGRID
#FASTFPPFLAG = -DFAST_DT -DFAST_SUBGRID

MFILE=makefile_optmod

###############################################################################
#  NOTE:  The following flags can either be set or commented out.  If they are
#         commented out, LIMITER defaults to LIM_SUPERBEE and DIFFMETH
#         defaults to CRANKNIC
#
#  LIMITER specifies which limiter to use
#    Current available options are:
#      LIM_NONE
#      LIM_LAXWEN
#      LIM_BW
#      LIM_FROMM
#      LIM_MINMOD
#      LIM_SUPERBEE
#      LIM_MC
#LIMITER = LIM_SUPERBEE
#
#  DIFFMETH specifies whether or not to use Crank-Nicolson
#
# Explicit calculation of diffusion term
#DIFFMETH=EXPLDIFF
# Implicit calculation of diffusion using Crank-Nicolson
#DIFFMETH=CRANKNIC
#
#  TESTCASE specified whether or not to compile for a test case and which one
#    Current available options are:
#      
#      TESTCASE=1 : 2-D concentration pulse with constant windfield (advect in x or y)
#        SUBCASE=1 : x+,y0
#        SUBCASE=5 : x+,y+
#        SUBCASE=2 : x-,y0
#        SUBCASE=3 : x0,y+
#        SUBCASE=4 : x0,y-
#        SUBCASE=5 : x+,y+
#        SUBCASE=7 : x-,y+
#        SUBCASE=8 : x+,y-
#      TESTCASE=2 : 1-D concentration pulse at xy point (advect in z)
#      TESTCASE=3 : Circular advection as in Randy's book
#      TESTCASE=4 : 1-D diffusion of half-space concentration
#      TESTCASE=5 : Circular shear as in Randy's paper
#TESTCASE=6
#SUBCASE=1
#
#  SUBCASE specified whether or not to compile for a test case and which one
#    Current available options are:
#SUBCASE=0

#OPTMODS_FPP= -x f95-cpp-input -DTESTCASES
OPTMODS_OBJ=           \
Testcases.o

# Ash3d can log some useful information about a run such as the username of 
# account that ran the case, then hostname of the system and run directory
# (or current working directory).  Although this is useful for record-keeping,
# this can be considered sensitive information.  To disable this logging,
# set PII=OFF
#PII=ON
PII=OFF

###############################################################################
#####  END OF USER SPECIFIED FLAGS  ###########################################
###############################################################################



###############################################################################
###############################################################################

OSFPPFLAG = -DLINUX
ifeq ($(OS), LINUX)
    OSFPPFLAG = -DLINUX
endif
ifeq ($(OS), MACOS)
    OSFPPFLAG = -DMACOS
endif
ifeq ($(OS), WINDOWS)
    OSFPPFLAG = -DWINDOWS
endif


LIMFPPFLAG = -DLIM_SUPERBEE
ifeq ($(LIMITER), LIM_NONE)
    LIMFPPFLAG = -DLIM_NONE
endif
ifeq ($(LIMITER), LIM_LAXWEN)
    LIMFPPFLAG = -DLIM_LAXWEN
endif
ifeq ($(LIMITER), LIM_BW)
    LIMFPPFLAG = -DLIM_BW
endif
ifeq ($(LIMITER), LIM_FROMM)
    LIMFPPFLAG = -DLIM_FROMM
endif
ifeq ($(LIMITER), LIM_MINMOD)
    LIMFPPFLAG = -DLIM_MINMOD
endif
ifeq ($(LIMITER), LIM_SUPERBEE)
    LIMFPPFLAG = -DLIM_SUPERBEE
endif
ifeq ($(LIMITER), LIM_MC)
    LIMFPPFLAG = -DLIM_MC
endif

DIFFFPPFLAG = -DCRANKNIC
ifeq ($(DIFFMETH), EXPLDIFF)
    DIFFFPPFLAG = -DEXPLDIFF
endif
ifeq ($(DIFFMETH), CRANKNIC)
    DIFFFPPFLAG = -DCRANKNIC
endif

DATAFPPFLAG =
ifeq ($(USENETCDF), T)
 ncFPPFLAG = -DUSENETCDF
  # if you only have netcdf3, then add this flag to block out references to nc4 subroutines
 #ncFPPFLAG = -DUSENETCDF -DNC3
 ncLIBS = -lnetcdf -lnetcdff
endif
ifeq ($(USEGRIB), T)
 grbFPPFLAG = -DUSEGRIB
 grbLIBS = -leccodes -leccodes_f90
endif

DATAFPPFLAG = $(ncFPPFLAG) $(grbFPPFLAG)
DATALIBS = $(ncLIBS) $(grbLIBS)

ifeq ($(USEPOINTERS), T)
 memFPPFLAG = -DUSEPOINTERS
endif

ifeq ($(USEEXTDATA), T)
 extdatFPPFLAG = -DUSEEXTDATA
endif



# location of MetReader, HoursSince and projection
USGSLIBDIR = -L$(USGSROOT)/lib
USGSLIB = -lMetReader -lhourssince -lprojection
USGSINC = -I$(USGSROOT)/include

TCFPPFLAG =
ifeq ($(TESTCASE), 0)
    TCFPPFLAG = 
    CYCFPPFLAG = 
endif
ifeq ($(TESTCASE), 1)
    TCFPPFLAG = -DTESTCASES -DTESTCASE_1
    CYCFPPFLAG = -DNOCYCLE
endif
ifeq ($(TESTCASE), 2)
    TCFPPFLAG = -DTESTCASES -DTESTCASE_2
    CYCFPPFLAG = -DNOCYCLE
endif
ifeq ($(TESTCASE), 3)
    TCFPPFLAG = -DTESTCASES -DTESTCASE_3
    CYCFPPFLAG = -DNOCYCLE
endif
ifeq ($(TESTCASE), 4)
    TCFPPFLAG = -DTESTCASES -DTESTCASE_4
    CYCFPPFLAG = -DNOCYCLE
endif
ifeq ($(TESTCASE), 5)
    TCFPPFLAG = -DTESTCASES -DTESTCASE_5
    CYCFPPFLAG = -DNOCYCLE
endif
ifeq ($(TESTCASE), 6)
    TCFPPFLAG = -DTESTCASES -DTESTCASE_6
    CYCFPPFLAG = -DNOCYCLE
endif

#SCFPPFLAG =
ifeq ($(SUBCASE), 0)
    SCFPPFLAG =
endif
ifeq ($(SUBCASE), 1)
    SCFPPFLAG =-DSUBCASE_1
endif
ifeq ($(SUBCASE), 2)
    SCFPPFLAG =-DSUBCASE_2
endif
ifeq ($(SUBCASE), 3)
    SCFPPFLAG =-DSUBCASE_3
endif
ifeq ($(SUBCASE), 4)
    SCFPPFLAG =-DSUBCASE_4
endif
ifeq ($(SUBCASE), 5)
    SCFPPFLAG =-DSUBCASE_5
endif
ifeq ($(SUBCASE), 6)
    SCFPPFLAG =-DSUBCASE_6
endif
ifeq ($(SUBCASE), 7)
    SCFPPFLAG =-DSUBCASE_7
endif
ifeq ($(SUBCASE), 8)
    SCFPPFLAG =-DSUBCASE_8
endif
OPTMODS_FPP = $(TCFPPFLAG) $(SCFPPFLAG) $(CYCFPPFLAG)

PIIFPP =
ifeq ($(PII), ON)
 PIIFPPFLAG = -DUSEPII
endif

# Executables
ifeq ($(RUN), DEBUG)
    ASH3DEXEC=Ash3d_TC_debug
endif
ifeq ($(RUN), DEBUGOMP)
    ASH3DEXEC=Ash3d_TC_debugomp
endif
ifeq ($(RUN), OPT)
    ASH3DEXEC=Ash3d_TC_opt
endif
ifeq ($(RUN), OMPOPT)
    ASH3DEXEC=Ash3d_TC_omp
endif


###############################################################################
# Import the compiler-specific include file.  Currently one of:
#  GNU Fortran Compiler
#  Intel Fortran Compiler
#  AMD Optimizing C/C++/Fortran Compiler (aocc)
include $(SYSINC)
###############################################################################

OBJECTS = \
Ash3d_VariableModules.o  \
Input_Data.o             \
Help.o                   \
VotW.o                   \
Airports.o               \
Calc_Mesh.o              \
Alloc_Arrays.o           \
Source.o                 \
Source_Umbrella.o        \
Tephra.o                 \
Adjust_dt.o              \
TimeStepTotals.o         \
Atmosphere.o             \
MesoInterpolater.o       \
AdvectionHorz.o          \
AdvectionHorz_DCU.o      \
AdvectionVert_DCU.o      \
Diffusion.o              \
Set_BC_TC.o              \
Output_Vars.o            \
Output_Results.o         \
write_ASCII.o            \
write_BINARY.o           \
write_KML.o              \
ResetParams.o

ifeq ($(USENETCDF), T)
  DATAOBJ = write_NETCDF.o
endif

Ash3d_TC: $(OBJECTS) $(DATAOBJ) $(OPTMODS_OBJ) Ash3d_TC.F90 $(MFILE) $(SYSINC)
	$(FC) $(FPPFLAGS) $(OPTMODS_FPP) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Ash3d_TC.F90 
	$(FC) $(FFLAGS) $(EXFLAGS) $(OBJECTS) $(DATAOBJ) Ash3d_TC.o $(OPTMODS_OBJ) $(LIBS) -o $(ASH3DEXEC)
	mkdir -p ../bin
	cp $(ASH3DEXEC) ../bin/Ash3d
	mv $(ASH3DEXEC) ../bin/$(ASH3DEXEC)

# Objects/Modules for initilization and model set-up
Ash3d_VariableModules.o: $(ASH3dCCSRC)/Ash3d_VariableModules.f90 $(MFILE) $(SYSINC)
	sh $(ASH3dCCSRC)/get_version.sh
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Ash3d_VariableModules.f90
Input_Data.o: $(ASH3dCCSRC)/Input_Data.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Help.o Tephra.o VotW.o Diffusion.o Airports.o $(DATAOBJ) Output_Vars.o Source.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Input_Data.f90
ResetParams.o: $(ASH3dCCSRC)/ResetParams.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Tephra.o Output_Vars.o Source_Umbrella.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/ResetParams.f90
Help.o: $(ASH3dCCSRC)/Help.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/Help.f90
VotW.o: $(ASH3dCCSRC)/VotW.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Source.o
	echo "        Ash3dHome = '$(INSTALLDIR)'" > installpath.h
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/VotW.f90
Airports.o: $(ASH3dCCSRC)/Airports.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o 
	echo "        Ash3dHome = '$(INSTALLDIR)'" > installpath.h
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Airports.f90
Calc_Mesh.o: $(ASH3dCCSRC)/Calc_Mesh.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Output_Vars.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Calc_Mesh.f90
Alloc_Arrays.o: $(ASH3dCCSRC)/Alloc_Arrays.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Tephra.o Source.o Source_Umbrella.o Diffusion.o Output_Vars.o AdvectionHorz.o Airports.o Atmosphere.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Alloc_Arrays.f90
Source.o: $(ASH3dCCSRC)/Source.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Source.f90
Source_Umbrella.o: $(ASH3dCCSRC)/Source_Umbrella.f90 $(MFILE) $(SYSINC) Source.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Source_Umbrella.f90
Tephra.o: $(ASH3dCCSRC)/Tephra.f90 $(MFILE) $(SYSINC) Atmosphere.o Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Tephra.f90

# Time
Adjust_dt.o: $(ASH3dCCSRC)/Adjust_dt.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Tephra.o Diffusion.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/Adjust_dt.f90
TimeStepTotals.o: $(ASH3dCCSRC)/TimeStepTotals.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Output_Vars.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/TimeStepTotals.f90

Atmosphere.o: $(ASH3dCCSRC)/Atmosphere.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Atmosphere.f90
MesoInterpolater.o: $(ASH3dCCSRC)/MesoInterpolater.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Atmosphere.o Tephra.o Source.o Source_Umbrella.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/MesoInterpolater.f90

# PDE Solver (Advection, Diffusion, B.C.'s)
AdvectionHorz.o: $(ASH3dCCSRC)/AdvectionHorz.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o AdvectionHorz_DCU.o
	$(FC) $(FPPFLAGS) $(OPTMODS_FPP) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/AdvectionHorz.f90
AdvectionHorz_DCU.o: $(ASH3dCCSRC)/AdvectionHorz_DCU.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(OPTMODS_FPP) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/AdvectionHorz_DCU.f90
AdvectionVert_DCU.o: $(ASH3dCCSRC)/AdvectionVert_DCU.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(OPTMODS_FPP) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/AdvectionVert_DCU.f90
Diffusion.o: $(ASH3dCCSRC)/Diffusion.F90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c $(ASH3dCCSRC)/Diffusion.F90
Set_BC_TC.o: Set_BC_TC.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Testcases.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) -c Set_BC_TC.f90

# Output
Output_Vars.o: $(ASH3dCCSRC)/Output_Vars.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Airports.o Tephra.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Output_Vars.f90
Output_Results.o: $(ASH3dCCSRC)/Output_Results.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Output_Vars.o write_BINARY.o write_ASCII.o write_KML.o $(DATAOBJ)
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/Output_Results.f90
write_ASCII.o: $(ASH3dCCSRC)/write_ASCII.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Output_Vars.o Airports.o Tephra.o Source.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_ASCII.f90
write_BINARY.o: $(ASH3dCCSRC)/write_BINARY.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_BINARY.f90
ifeq ($(USENETCDF), T)
write_NETCDF.o: $(ASH3dCCSRC)/write_NETCDF.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Output_Vars.o Airports.o Tephra.o Source.o Source_Umbrella.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_NETCDF.f90
endif
write_KML.o: $(ASH3dCCSRC)/write_KML.f90 $(MFILE) $(SYSINC) Ash3d_VariableModules.o Output_Vars.o Airports.o Tephra.o Source.o
	$(FC) $(FPPFLAGS) $(FFLAGS) $(EXFLAGS) $(LIBS) -c $(ASH3dCCSRC)/write_KML.f90

# Optional modules
Testcases.o: Optional_Modules/TestCases/Testcases.f90 Ash3d_VariableModules.o $(MFILE) $(SYSINC) Atmosphere.o Diffusion.o
	$(FC) $(FPPFLAGS) $(OPTMODS_FPP) $(FFLAGS) $(EXFLAGS) $(LIBS) -c Optional_Modules/TestCases/Testcases.f90


all: Ash3d_TC

clean:
	rm -rf $(OBJECTS) Ash3d_TC.o $(DATAOBJ) $(OPTMODS_OBJ) ../bin/Ash3d* \
        *.mod *__genmod.f90

install:
	install -d $(INSTALLDIR)/bin $(INSTALLDIR)/share/post_proc
	install -m 755 ../bin/$(ASH3DEXEC) $(INSTALLDIR)/bin/$(ASH3DEXEC)

uninstall:
	rm -f $(INSTALLDIR)/bin/$(ASH3DEXEC)

